

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 08 00:00:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.45
    28                           ; Generated 16/11/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F628A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  008C                     	;# 
    89  008E                     	;# 
    90  0092                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009F                     	;# 
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000E                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  008C                     	;# 
   126  008E                     	;# 
   127  0092                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009F                     	;# 
   135                           
   136                           	psect	idataBANK0
   137  0385                     __pidataBANK0:	
   138                           
   139                           ;initializer for loop@semidireccion
   140  0385  3409               	retlw	9
   141  0386  3400               	retlw	0
   142                           
   143                           ;initializer for loop@direccion
   144  0387  3409               	retlw	9
   145  0388  3400               	retlw	0
   146  000B                     _INTCON	set	11
   147  001F                     _CMCON	set	31
   148  0012                     _T2CON	set	18
   149  0017                     _CCP1CON	set	23
   150  0015                     _CCPR1L	set	21
   151  0006                     _PORTBbits	set	6
   152  0005                     _PORTAbits	set	5
   153  000B                     _INTCONbits	set	11
   154  0081                     _OPTION_REG	set	129
   155  008E                     _PCON	set	142
   156  009F                     _VRCON	set	159
   157  0092                     _PR2	set	146
   158  0086                     _TRISBbits	set	134
   159  0085                     _TRISAbits	set	133
   160                           
   161                           ; #config settings
   162  0000                     
   163                           	psect	cinit
   164  0011                     start_initialization:	
   165  0011                     __initialization:	
   166                           
   167                           ; Initialize objects allocated to BANK0
   168  0011  2385               	fcall	__pidataBANK0	;fetch initializer
   169  0012  00B4               	movwf	__pdataBANK0& (0+127)
   170  0013  2386               	fcall	__pidataBANK0+1	;fetch initializer
   171  0014  00B5               	movwf	(__pdataBANK0+1)& (0+127)
   172  0015  2387               	fcall	__pidataBANK0+2	;fetch initializer
   173  0016  00B6               	movwf	(__pdataBANK0+2)& (0+127)
   174  0017  2388               	fcall	__pidataBANK0+3	;fetch initializer
   175  0018  00B7               	movwf	(__pdataBANK0+3)& (0+127)
   176                           
   177                           ; Clear objects allocated to BANK0
   178  0019  01A0               	clrf	__pbssBANK0& (0+127)
   179  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   180  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   181  001C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   182  001D  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   183  001E  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   184  001F  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   185  0020  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   186  0021  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   187  0022  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   188                           
   189                           ; Clear objects allocated to COMMON
   190  0023  01F8               	clrf	__pbssCOMMON& (0+127)
   191  0024  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   192  0025                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  0025                     __end_of__initialization:	
   196  0025  0183               	clrf	3
   197  0026  2B80               	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMMON
   200  0078                     __pbssCOMMON:	
   201  0078                     ISR@decimicrosCounter:	
   202  0078                     	ds	2
   203                           
   204                           	psect	bssBANK0
   205  0020                     __pbssBANK0:	
   206  0020                     _millisCounter:	
   207  0020                     	ds	4
   208  0024                     loop@m:	
   209  0024                     	ds	4
   210  0028                     loop@estado:	
   211  0028                     	ds	2
   212                           
   213                           	psect	dataBANK0
   214  0034                     __pdataBANK0:	
   215  0034                     loop@semidireccion:	
   216  0034                     	ds	2
   217  0036                     loop@direccion:	
   218  0036                     	ds	2
   219                           
   220                           	psect	cstackCOMMON
   221  0070                     __pcstackCOMMON:	
   222  0070                     ?_btn:	
   223  0070                     ?_ir:	
   224                           ; 1 bit 
   225                           
   226  0070                     ?_cny:	
   227                           ; 1 bit 
   228                           
   229  0070                     ?_initIO:	
   230                           ; 1 bit 
   231                           
   232  0070                     ?_initPWM:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_initRest:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_loop:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_ISR:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ??_ISR:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252  0070                     	ds	4
   253  0074                     ??_btn:	
   254  0074                     ?_setMotores:	
   255                           ; 1 bytes @ 0x4
   256                           
   257  0074                     ??_ir:	
   258                           ; 1 bytes @ 0x4
   259                           
   260  0074                     ??_cny:	
   261                           ; 1 bytes @ 0x4
   262                           
   263  0074                     ??_initIO:	
   264                           ; 1 bytes @ 0x4
   265                           
   266  0074                     ??_initPWM:	
   267                           ; 1 bytes @ 0x4
   268                           
   269  0074                     ??_initRest:	
   270                           ; 1 bytes @ 0x4
   271                           
   272  0074                     ?_millis:	
   273                           ; 1 bytes @ 0x4
   274                           
   275  0074                     setMotores@der:	
   276                           ; 4 bytes @ 0x4
   277                           
   278  0074                     btn@n:	
   279                           ; 1 bytes @ 0x4
   280                           
   281  0074                     ir@n:	
   282                           ; 1 bytes @ 0x4
   283                           
   284                           
   285                           ; 1 bytes @ 0x4
   286  0074                     	ds	1
   287  0075                     ??_setMotores:	
   288  0075                     setMotores@izq:	
   289                           ; 1 bytes @ 0x5
   290                           
   291                           
   292                           ; 1 bytes @ 0x5
   293  0075                     	ds	3
   294  0078                     ??_led:	
   295  0078                     ??_millis:	
   296                           ; 1 bytes @ 0x8
   297                           
   298  0078                     ??_main:	
   299                           ; 1 bytes @ 0x8
   300                           
   301                           
   302                           	psect	cstackBANK0
   303  002A                     __pcstackBANK0:	
   304                           ; 1 bytes @ 0x8
   305                           
   306  002A                     ?_led:	
   307  002A                     led@v:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           ; 1 bytes @ 0x0
   312  002A                     	ds	1
   313  002B                     led@n:	
   314                           
   315                           ; 1 bytes @ 0x1
   316  002B                     	ds	1
   317  002C                     ??_loop:	
   318                           
   319                           ; 1 bytes @ 0x2
   320  002C                     	ds	5
   321  0031                     _loop$83:	
   322                           
   323                           ; 1 bytes @ 0x7
   324  0031                     	ds	1
   325  0032                     _loop$84:	
   326                           
   327                           ; 1 bytes @ 0x8
   328  0032                     	ds	1
   329  0033                     _loop$85:	
   330                           
   331                           ; 1 bytes @ 0x9
   332  0033                     	ds	1
   333                           
   334                           	psect	maintext
   335  0380                     __pmaintext:	
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 148 in file "main.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : B00/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   355 ;;      Params:         0       0       0       0
   356 ;;      Locals:         0       0       0       0
   357 ;;      Temps:          0       0       0       0
   358 ;;      Totals:         0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels required when called:    3
   361 ;; This function calls:
   362 ;;		_initIO
   363 ;;		_initPWM
   364 ;;		_initRest
   365 ;;		_loop
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           
   372                           ;psect for function _main
   373  0380                     _main:	
   374                           
   375                           ;main.c: 149: initIO();
   376                           
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   379  0380  2335               	fcall	_initIO
   380                           
   381                           ;main.c: 150: initPWM();
   382  0381  2356               	fcall	_initPWM
   383                           
   384                           ;main.c: 151: initRest();
   385  0382  2348               	fcall	_initRest
   386  0383                     l1733:	
   387                           ;main.c: 152: while(1) loop();
   388                           
   389  0383  2027               	fcall	_loop
   390  0384  2B83               	goto	l1733
   391  0385                     __end_of_main:	
   392                           
   393                           	psect	text1
   394  0027                     __ptext1:	
   395 ;; *************** function _loop *****************
   396 ;; Defined at:
   397 ;;		line 20 in file "main.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   411 ;;      Params:         0       0       0       0
   412 ;;      Locals:         0       3       0       0
   413 ;;      Temps:          0       5       0       0
   414 ;;      Totals:         0       8       0       0
   415 ;;Total ram usage:        8 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; Hardware stack levels required when called:    2
   418 ;; This function calls:
   419 ;;		_btn
   420 ;;		_cny
   421 ;;		_ir
   422 ;;		_led
   423 ;;		_millis
   424 ;;		_setMotores
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           
   431                           ;psect for function _loop
   432  0027                     _loop:	
   433                           
   434                           ;main.c: 21: static unsigned int estado = MENU;
   435                           ;main.c: 22: static unsigned int direccion = DER;
   436                           ;main.c: 23: static unsigned int semidireccion = DER;
   437                           ;main.c: 24: static unsigned long m = 0;
   438                           ;main.c: 25: switch(estado){
   439                           
   440                           ;incstack = 0
   441                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   442  0027  2A42               	goto	l1717
   443  0028                     l1581:	
   444                           ;main.c: 26: case MENU:
   445                           
   446                           
   447                           ;main.c: 27: if(btn(I)){
   448  0028  3004               	movlw	4
   449  0029  231A               	fcall	_btn
   450  002A  1C03               	btfss	3,0
   451  002B  2856               	goto	l1593
   452                           
   453                           ;main.c: 28: led(R, 1);
   454  002C  1283               	bcf	3,5	;RP0=0, select bank0
   455  002D  1303               	bcf	3,6	;RP1=0, select bank0
   456  002E  01AA               	clrf	led@v
   457  002F  0AAA               	incf	led@v,f
   458  0030  3000               	movlw	0
   459  0031  22EE               	fcall	_led
   460                           
   461                           ;main.c: 29: led(A, 0);
   462  0032  1283               	bcf	3,5	;RP0=0, select bank0
   463  0033  1303               	bcf	3,6	;RP1=0, select bank0
   464  0034  01AA               	clrf	led@v
   465  0035  3001               	movlw	1
   466  0036  22EE               	fcall	_led
   467                           
   468                           ;main.c: 30: led(V, 0);
   469  0037  1283               	bcf	3,5	;RP0=0, select bank0
   470  0038  1303               	bcf	3,6	;RP1=0, select bank0
   471  0039  01AA               	clrf	led@v
   472  003A  3002               	movlw	2
   473  003B  22EE               	fcall	_led
   474                           
   475                           ;main.c: 31: direccion = IZQ;
   476  003C  3008               	movlw	8
   477  003D  1283               	bcf	3,5	;RP0=0, select bank0
   478  003E  1303               	bcf	3,6	;RP1=0, select bank0
   479  003F  00B6               	movwf	loop@direccion
   480  0040  3000               	movlw	0
   481  0041  00B7               	movwf	loop@direccion+1
   482                           
   483                           ;main.c: 32: estado = ESPERA;
   484  0042  3001               	movlw	1
   485  0043  00A8               	movwf	loop@estado
   486  0044  3000               	movlw	0
   487  0045  00A9               	movwf	loop@estado+1
   488  0046                     l1591:	
   489                           ;main.c: 33: while(btn(I)) m = millis();
   490                           
   491  0046  3004               	movlw	4
   492  0047  231A               	fcall	_btn
   493  0048  1C03               	btfss	3,0
   494  0049  0008               	return
   495  004A  2363               	fcall	_millis
   496  004B  0877               	movf	?_millis+3,w
   497  004C  1283               	bcf	3,5	;RP0=0, select bank0
   498  004D  1303               	bcf	3,6	;RP1=0, select bank0
   499  004E  00A7               	movwf	loop@m+3
   500  004F  0876               	movf	?_millis+2,w
   501  0050  00A6               	movwf	loop@m+2
   502  0051  0875               	movf	?_millis+1,w
   503  0052  00A5               	movwf	loop@m+1
   504  0053  0874               	movf	?_millis,w
   505  0054  00A4               	movwf	loop@m
   506  0055  2846               	goto	l1591
   507  0056                     l1593:	
   508                           ;main.c: 34: break;
   509                           
   510                           
   511                           ;main.c: 35: }
   512                           ;main.c: 37: if(btn(D)){
   513  0056  3003               	movlw	3
   514  0057  231A               	fcall	_btn
   515  0058  1C03               	btfss	3,0
   516  0059  2884               	goto	l1605
   517                           
   518                           ;main.c: 38: led(R, 0);
   519  005A  1283               	bcf	3,5	;RP0=0, select bank0
   520  005B  1303               	bcf	3,6	;RP1=0, select bank0
   521  005C  01AA               	clrf	led@v
   522  005D  3000               	movlw	0
   523  005E  22EE               	fcall	_led
   524                           
   525                           ;main.c: 39: led(A, 0);
   526  005F  1283               	bcf	3,5	;RP0=0, select bank0
   527  0060  1303               	bcf	3,6	;RP1=0, select bank0
   528  0061  01AA               	clrf	led@v
   529  0062  3001               	movlw	1
   530  0063  22EE               	fcall	_led
   531                           
   532                           ;main.c: 40: led(V, 1);
   533  0064  1283               	bcf	3,5	;RP0=0, select bank0
   534  0065  1303               	bcf	3,6	;RP1=0, select bank0
   535  0066  01AA               	clrf	led@v
   536  0067  0AAA               	incf	led@v,f
   537  0068  3002               	movlw	2
   538  0069  22EE               	fcall	_led
   539                           
   540                           ;main.c: 41: direccion = DER;
   541  006A  3009               	movlw	9
   542  006B  1283               	bcf	3,5	;RP0=0, select bank0
   543  006C  1303               	bcf	3,6	;RP1=0, select bank0
   544  006D  00B6               	movwf	loop@direccion
   545  006E  3000               	movlw	0
   546  006F  00B7               	movwf	loop@direccion+1
   547                           
   548                           ;main.c: 42: estado = ESPERA;
   549  0070  3001               	movlw	1
   550  0071  00A8               	movwf	loop@estado
   551  0072  3000               	movlw	0
   552  0073  00A9               	movwf	loop@estado+1
   553  0074                     l1603:	
   554                           ;main.c: 43: while(btn(I)) m = millis();
   555                           
   556  0074  3004               	movlw	4
   557  0075  231A               	fcall	_btn
   558  0076  1C03               	btfss	3,0
   559  0077  0008               	return
   560  0078  2363               	fcall	_millis
   561  0079  0877               	movf	?_millis+3,w
   562  007A  1283               	bcf	3,5	;RP0=0, select bank0
   563  007B  1303               	bcf	3,6	;RP1=0, select bank0
   564  007C  00A7               	movwf	loop@m+3
   565  007D  0876               	movf	?_millis+2,w
   566  007E  00A6               	movwf	loop@m+2
   567  007F  0875               	movf	?_millis+1,w
   568  0080  00A5               	movwf	loop@m+1
   569  0081  0874               	movf	?_millis,w
   570  0082  00A4               	movwf	loop@m
   571  0083  2874               	goto	l1603
   572  0084                     l1605:	
   573                           ;main.c: 44: break;
   574                           
   575                           
   576                           ;main.c: 45: }
   577                           ;main.c: 47: setMotores(0, 0);
   578  0084  01F4               	clrf	setMotores@der
   579  0085  3000               	movlw	0
   580  0086  22C2               	fcall	_setMotores
   581                           
   582                           ;main.c: 48: led(R, ir(1) || ir(2));
   583  0087  1283               	bcf	3,5	;RP0=0, select bank0
   584  0088  1303               	bcf	3,6	;RP1=0, select bank0
   585  0089  01B1               	clrf	_loop$83
   586  008A  0AB1               	incf	_loop$83,f
   587  008B  3001               	movlw	1
   588  008C  2255               	fcall	_ir
   589  008D  1803               	btfsc	3,0
   590  008E  2896               	goto	l1613
   591  008F  3002               	movlw	2
   592  0090  2255               	fcall	_ir
   593  0091  1803               	btfsc	3,0
   594  0092  2896               	goto	l1613
   595  0093  1283               	bcf	3,5	;RP0=0, select bank0
   596  0094  1303               	bcf	3,6	;RP1=0, select bank0
   597  0095  01B1               	clrf	_loop$83
   598  0096                     l1613:	
   599  0096  1283               	bcf	3,5	;RP0=0, select bank0
   600  0097  1303               	bcf	3,6	;RP1=0, select bank0
   601  0098  0831               	movf	_loop$83,w
   602  0099  00AC               	movwf	??_loop
   603  009A  082C               	movf	??_loop,w
   604  009B  00AA               	movwf	led@v
   605  009C  3000               	movlw	0
   606  009D  22EE               	fcall	_led
   607                           
   608                           ;main.c: 49: led(A, cny() || ir(5));
   609  009E  1283               	bcf	3,5	;RP0=0, select bank0
   610  009F  1303               	bcf	3,6	;RP1=0, select bank0
   611  00A0  01B2               	clrf	_loop$84
   612  00A1  0AB2               	incf	_loop$84,f
   613  00A2  2378               	fcall	_cny
   614  00A3  1803               	btfsc	3,0
   615  00A4  28AC               	goto	l1623
   616  00A5  3005               	movlw	5
   617  00A6  2255               	fcall	_ir
   618  00A7  1803               	btfsc	3,0
   619  00A8  28AC               	goto	l1623
   620  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   621  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   622  00AB  01B2               	clrf	_loop$84
   623  00AC                     l1623:	
   624  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   625  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   626  00AE  0832               	movf	_loop$84,w
   627  00AF  00AC               	movwf	??_loop
   628  00B0  082C               	movf	??_loop,w
   629  00B1  00AA               	movwf	led@v
   630  00B2  3001               	movlw	1
   631  00B3  22EE               	fcall	_led
   632                           
   633                           ;main.c: 50: led(V, ir(3) || ir(4));
   634  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   635  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   636  00B6  01B3               	clrf	_loop$85
   637  00B7  0AB3               	incf	_loop$85,f
   638  00B8  3003               	movlw	3
   639  00B9  2255               	fcall	_ir
   640  00BA  1803               	btfsc	3,0
   641  00BB  28C3               	goto	l1633
   642  00BC  3004               	movlw	4
   643  00BD  2255               	fcall	_ir
   644  00BE  1803               	btfsc	3,0
   645  00BF  28C3               	goto	l1633
   646  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   647  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   648  00C2  01B3               	clrf	_loop$85
   649  00C3                     l1633:	
   650  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   651  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   652  00C5  0833               	movf	_loop$85,w
   653  00C6  00AC               	movwf	??_loop
   654  00C7  082C               	movf	??_loop,w
   655  00C8  00AA               	movwf	led@v
   656  00C9  3002               	movlw	2
   657  00CA  22EE               	fcall	_led
   658                           
   659                           ;main.c: 51: break;
   660  00CB  0008               	return
   661  00CC                     l1635:	
   662                           ;main.c: 53: case ESPERA:
   663                           
   664                           
   665                           ;main.c: 54: if(millis() >= (m + 4960)){
   666  00CC  3060               	movlw	96
   667  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   668  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   669  00CF  00AC               	movwf	??_loop
   670  00D0  3013               	movlw	19
   671  00D1  00AD               	movwf	??_loop+1
   672  00D2  3000               	movlw	0
   673  00D3  00AE               	movwf	??_loop+2
   674  00D4  3000               	movlw	0
   675  00D5  00AF               	movwf	??_loop+3
   676  00D6  0824               	movf	loop@m,w
   677  00D7  07AC               	addwf	??_loop,f
   678  00D8  0825               	movf	loop@m+1,w
   679  00D9  1803               	skipnc
   680  00DA  0F25               	incfsz	loop@m+1,w
   681  00DB  28DD               	goto	u1480
   682  00DC  28DE               	goto	u1481
   683  00DD                     u1480:	
   684  00DD  07AD               	addwf	??_loop+1,f
   685  00DE                     u1481:	
   686  00DE  0826               	movf	loop@m+2,w
   687  00DF  1803               	skipnc
   688  00E0  0F26               	incfsz	loop@m+2,w
   689  00E1  28E3               	goto	u1482
   690  00E2  28E4               	goto	u1483
   691  00E3                     u1482:	
   692  00E3  07AE               	addwf	??_loop+2,f
   693  00E4                     u1483:	
   694  00E4  0827               	movf	loop@m+3,w
   695  00E5  1803               	skipnc
   696  00E6  0A27               	incf	loop@m+3,w
   697  00E7  07AF               	addwf	??_loop+3,f
   698  00E8  2363               	fcall	_millis
   699  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   700  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   701  00EB  082F               	movf	??_loop+3,w
   702  00EC  0277               	subwf	?_millis+3,w
   703  00ED  1D03               	skipz
   704  00EE  28F9               	goto	u1495
   705  00EF  082E               	movf	??_loop+2,w
   706  00F0  0276               	subwf	?_millis+2,w
   707  00F1  1D03               	skipz
   708  00F2  28F9               	goto	u1495
   709  00F3  082D               	movf	??_loop+1,w
   710  00F4  0275               	subwf	?_millis+1,w
   711  00F5  1D03               	skipz
   712  00F6  28F9               	goto	u1495
   713  00F7  082C               	movf	??_loop,w
   714  00F8  0274               	subwf	?_millis,w
   715  00F9                     u1495:	
   716  00F9  1C03               	skipc
   717  00FA  290D               	goto	l1645
   718                           
   719                           ;main.c: 55: estado = ANALISIS;
   720  00FB  3002               	movlw	2
   721  00FC  00A8               	movwf	loop@estado
   722  00FD  3000               	movlw	0
   723  00FE  00A9               	movwf	loop@estado+1
   724                           
   725                           ;main.c: 56: led(R, 0);
   726  00FF  01AA               	clrf	led@v
   727  0100  3000               	movlw	0
   728  0101  22EE               	fcall	_led
   729                           
   730                           ;main.c: 57: led(A, 0);
   731  0102  1283               	bcf	3,5	;RP0=0, select bank0
   732  0103  1303               	bcf	3,6	;RP1=0, select bank0
   733  0104  01AA               	clrf	led@v
   734  0105  3001               	movlw	1
   735  0106  22EE               	fcall	_led
   736                           
   737                           ;main.c: 58: led(V, 1);
   738  0107  1283               	bcf	3,5	;RP0=0, select bank0
   739  0108  1303               	bcf	3,6	;RP1=0, select bank0
   740  0109  01AA               	clrf	led@v
   741  010A  0AAA               	incf	led@v,f
   742  010B  3002               	movlw	2
   743  010C  22EE               	fcall	_led
   744  010D                     l1645:	
   745                           
   746                           ;main.c: 59: }
   747                           ;main.c: 61: setMotores(0, 0);
   748  010D  01F4               	clrf	setMotores@der
   749  010E  3000               	movlw	0
   750  010F  22C2               	fcall	_setMotores
   751                           
   752                           ;main.c: 62: led(R, 1);
   753  0110  1283               	bcf	3,5	;RP0=0, select bank0
   754  0111  1303               	bcf	3,6	;RP1=0, select bank0
   755  0112  01AA               	clrf	led@v
   756  0113  0AAA               	incf	led@v,f
   757  0114  3000               	movlw	0
   758  0115  22EE               	fcall	_led
   759                           
   760                           ;main.c: 63: led(A, millis() > (m + 4960 / 2));
   761  0116  2363               	fcall	_millis
   762  0117  30B0               	movlw	176
   763  0118  1283               	bcf	3,5	;RP0=0, select bank0
   764  0119  1303               	bcf	3,6	;RP1=0, select bank0
   765  011A  00AC               	movwf	??_loop
   766  011B  3009               	movlw	9
   767  011C  00AD               	movwf	??_loop+1
   768  011D  3000               	movlw	0
   769  011E  00AE               	movwf	??_loop+2
   770  011F  3000               	movlw	0
   771  0120  00AF               	movwf	??_loop+3
   772  0121  0824               	movf	loop@m,w
   773  0122  07AC               	addwf	??_loop,f
   774  0123  0825               	movf	loop@m+1,w
   775  0124  1803               	skipnc
   776  0125  0F25               	incfsz	loop@m+1,w
   777  0126  2928               	goto	u1500
   778  0127  2929               	goto	u1501
   779  0128                     u1500:	
   780  0128  07AD               	addwf	??_loop+1,f
   781  0129                     u1501:	
   782  0129  0826               	movf	loop@m+2,w
   783  012A  1803               	skipnc
   784  012B  0F26               	incfsz	loop@m+2,w
   785  012C  292E               	goto	u1502
   786  012D  292F               	goto	u1503
   787  012E                     u1502:	
   788  012E  07AE               	addwf	??_loop+2,f
   789  012F                     u1503:	
   790  012F  0827               	movf	loop@m+3,w
   791  0130  1803               	skipnc
   792  0131  0A27               	incf	loop@m+3,w
   793  0132  07AF               	addwf	??_loop+3,f
   794  0133  0877               	movf	?_millis+3,w
   795  0134  022F               	subwf	??_loop+3,w
   796  0135  1D03               	skipz
   797  0136  2941               	goto	u1515
   798  0137  0876               	movf	?_millis+2,w
   799  0138  022E               	subwf	??_loop+2,w
   800  0139  1D03               	skipz
   801  013A  2941               	goto	u1515
   802  013B  0875               	movf	?_millis+1,w
   803  013C  022D               	subwf	??_loop+1,w
   804  013D  1D03               	skipz
   805  013E  2941               	goto	u1515
   806  013F  0874               	movf	?_millis,w
   807  0140  022C               	subwf	??_loop,w
   808  0141                     u1515:	
   809  0141  1803               	btfsc	3,0
   810  0142  2945               	goto	u1510
   811  0143  3001               	movlw	1
   812  0144  2946               	goto	u1520
   813  0145                     u1510:	
   814  0145  3000               	movlw	0
   815  0146                     u1520:	
   816  0146  00B0               	movwf	??_loop+4
   817  0147  0830               	movf	??_loop+4,w
   818  0148  00AA               	movwf	led@v
   819  0149  3001               	movlw	1
   820  014A  22EE               	fcall	_led
   821                           
   822                           ;main.c: 64: led(V, 0);
   823  014B  1283               	bcf	3,5	;RP0=0, select bank0
   824  014C  1303               	bcf	3,6	;RP1=0, select bank0
   825  014D  01AA               	clrf	led@v
   826  014E  3002               	movlw	2
   827  014F  22EE               	fcall	_led
   828                           
   829                           ;main.c: 65: break;
   830  0150  0008               	return
   831  0151                     l1653:	
   832                           ;main.c: 67: case ANALISIS:
   833                           
   834                           
   835                           ;main.c: 68: if(cny()){
   836  0151  2378               	fcall	_cny
   837  0152  1C03               	btfss	3,0
   838  0153  2966               	goto	l1659
   839                           
   840                           ;main.c: 69: estado = ATRAS;
   841  0154  3003               	movlw	3
   842  0155  1283               	bcf	3,5	;RP0=0, select bank0
   843  0156  1303               	bcf	3,6	;RP1=0, select bank0
   844  0157  00A8               	movwf	loop@estado
   845  0158  3000               	movlw	0
   846  0159  00A9               	movwf	loop@estado+1
   847                           
   848                           ;main.c: 70: m = millis();
   849  015A  2363               	fcall	_millis
   850  015B  0877               	movf	?_millis+3,w
   851  015C  1283               	bcf	3,5	;RP0=0, select bank0
   852  015D  1303               	bcf	3,6	;RP1=0, select bank0
   853  015E  00A7               	movwf	loop@m+3
   854  015F  0876               	movf	?_millis+2,w
   855  0160  00A6               	movwf	loop@m+2
   856  0161  0875               	movf	?_millis+1,w
   857  0162  00A5               	movwf	loop@m+1
   858  0163  0874               	movf	?_millis,w
   859  0164  00A4               	movwf	loop@m
   860                           
   861                           ;main.c: 71: break;
   862  0165  0008               	return
   863  0166                     l1659:	
   864                           
   865                           ;main.c: 72: }
   866                           ;main.c: 74: if(ir(5)){
   867  0166  3005               	movlw	5
   868  0167  2255               	fcall	_ir
   869  0168  1C03               	btfss	3,0
   870  0169  297E               	goto	l1665
   871                           
   872                           ;main.c: 75: if(direccion != VUELTA) semidireccion = direccion;
   873  016A  3004               	movlw	4
   874  016B  1283               	bcf	3,5	;RP0=0, select bank0
   875  016C  1303               	bcf	3,6	;RP1=0, select bank0
   876  016D  0636               	xorwf	loop@direccion,w
   877  016E  0437               	iorwf	loop@direccion+1,w
   878  016F  1903               	btfsc	3,2
   879  0170  2975               	goto	l51
   880  0171  0837               	movf	loop@direccion+1,w
   881  0172  00B5               	movwf	loop@semidireccion+1
   882  0173  0836               	movf	loop@direccion,w
   883  0174  00B4               	movwf	loop@semidireccion
   884  0175                     l51:	
   885                           
   886                           ;main.c: 76: direccion = VUELTA;
   887  0175  3004               	movlw	4
   888  0176  00B6               	movwf	loop@direccion
   889  0177  3000               	movlw	0
   890  0178  00B7               	movwf	loop@direccion+1
   891                           
   892                           ;main.c: 77: estado = VUELTA;
   893  0179  3004               	movlw	4
   894  017A  00A8               	movwf	loop@estado
   895  017B  3000               	movlw	0
   896  017C  00A9               	movwf	loop@estado+1
   897                           
   898                           ;main.c: 78: break;
   899  017D  0008               	return
   900  017E                     l1665:	
   901                           
   902                           ;main.c: 79: }
   903                           ;main.c: 81: if(ir(2) && ir(3)){
   904  017E  3002               	movlw	2
   905  017F  2255               	fcall	_ir
   906  0180  1C03               	btfss	3,0
   907  0181  298D               	goto	l1671
   908  0182  3003               	movlw	3
   909  0183  2255               	fcall	_ir
   910  0184  1C03               	btfss	3,0
   911  0185  298D               	goto	l1671
   912                           
   913                           ;main.c: 82: estado = ATAQUE;
   914  0186  3005               	movlw	5
   915  0187  1283               	bcf	3,5	;RP0=0, select bank0
   916  0188  1303               	bcf	3,6	;RP1=0, select bank0
   917  0189  00A8               	movwf	loop@estado
   918  018A  3000               	movlw	0
   919  018B  00A9               	movwf	loop@estado+1
   920                           
   921                           ;main.c: 83: break;
   922  018C  0008               	return
   923  018D                     l1671:	
   924                           
   925                           ;main.c: 84: }
   926                           ;main.c: 86: if(ir(2)){
   927  018D  3002               	movlw	2
   928  018E  2255               	fcall	_ir
   929  018F  1C03               	btfss	3,0
   930  0190  2998               	goto	l1675
   931                           
   932                           ;main.c: 87: estado = IZQA;
   933  0191  3006               	movlw	6
   934  0192  1283               	bcf	3,5	;RP0=0, select bank0
   935  0193  1303               	bcf	3,6	;RP1=0, select bank0
   936  0194  00A8               	movwf	loop@estado
   937  0195  3000               	movlw	0
   938  0196  00A9               	movwf	loop@estado+1
   939                           
   940                           ;main.c: 88: break;
   941  0197  0008               	return
   942  0198                     l1675:	
   943                           
   944                           ;main.c: 89: }
   945                           ;main.c: 91: if(ir(3)){
   946  0198  3003               	movlw	3
   947  0199  2255               	fcall	_ir
   948  019A  1C03               	btfss	3,0
   949  019B  29A3               	goto	l1679
   950                           
   951                           ;main.c: 92: estado = DERA;
   952  019C  3007               	movlw	7
   953  019D  1283               	bcf	3,5	;RP0=0, select bank0
   954  019E  1303               	bcf	3,6	;RP1=0, select bank0
   955  019F  00A8               	movwf	loop@estado
   956  01A0  3000               	movlw	0
   957  01A1  00A9               	movwf	loop@estado+1
   958                           
   959                           ;main.c: 93: break;
   960  01A2  0008               	return
   961  01A3                     l1679:	
   962                           
   963                           ;main.c: 94: }
   964                           ;main.c: 96: if(ir(1)){
   965  01A3  3001               	movlw	1
   966  01A4  2255               	fcall	_ir
   967  01A5  1C03               	btfss	3,0
   968  01A6  29AE               	goto	l1683
   969                           
   970                           ;main.c: 97: estado = IZQ;
   971  01A7  3008               	movlw	8
   972  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   973  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   974  01AA  00A8               	movwf	loop@estado
   975  01AB  3000               	movlw	0
   976  01AC  00A9               	movwf	loop@estado+1
   977                           
   978                           ;main.c: 98: break;
   979  01AD  0008               	return
   980  01AE                     l1683:	
   981                           
   982                           ;main.c: 99: }
   983                           ;main.c: 101: if(ir(4)){
   984  01AE  3004               	movlw	4
   985  01AF  2255               	fcall	_ir
   986  01B0  1C03               	btfss	3,0
   987  01B1  29B9               	goto	l1687
   988                           
   989                           ;main.c: 102: estado = DER;
   990  01B2  3009               	movlw	9
   991  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   992  01B4  1303               	bcf	3,6	;RP1=0, select bank0
   993  01B5  00A8               	movwf	loop@estado
   994  01B6  3000               	movlw	0
   995  01B7  00A9               	movwf	loop@estado+1
   996                           
   997                           ;main.c: 103: break;
   998  01B8  0008               	return
   999  01B9                     l1687:	
  1000                           
  1001                           ;main.c: 104: }
  1002                           ;main.c: 106: estado = direccion;
  1003  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1004  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1005  01BB  0837               	movf	loop@direccion+1,w
  1006  01BC  00A9               	movwf	loop@estado+1
  1007  01BD  0836               	movf	loop@direccion,w
  1008  01BE  00A8               	movwf	loop@estado
  1009                           
  1010                           ;main.c: 107: break;
  1011  01BF  0008               	return
  1012  01C0                     l1689:	
  1013                           ;main.c: 109: case ATRAS:
  1014                           
  1015                           
  1016                           ;main.c: 110: if(millis() > (m + 1000)){
  1017  01C0  2363               	fcall	_millis
  1018  01C1  30E8               	movlw	232
  1019  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1020  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1021  01C4  00AC               	movwf	??_loop
  1022  01C5  3003               	movlw	3
  1023  01C6  00AD               	movwf	??_loop+1
  1024  01C7  3000               	movlw	0
  1025  01C8  00AE               	movwf	??_loop+2
  1026  01C9  3000               	movlw	0
  1027  01CA  00AF               	movwf	??_loop+3
  1028  01CB  0824               	movf	loop@m,w
  1029  01CC  07AC               	addwf	??_loop,f
  1030  01CD  0825               	movf	loop@m+1,w
  1031  01CE  1803               	skipnc
  1032  01CF  0F25               	incfsz	loop@m+1,w
  1033  01D0  29D2               	goto	u1620
  1034  01D1  29D3               	goto	u1621
  1035  01D2                     u1620:	
  1036  01D2  07AD               	addwf	??_loop+1,f
  1037  01D3                     u1621:	
  1038  01D3  0826               	movf	loop@m+2,w
  1039  01D4  1803               	skipnc
  1040  01D5  0F26               	incfsz	loop@m+2,w
  1041  01D6  29D8               	goto	u1622
  1042  01D7  29D9               	goto	u1623
  1043  01D8                     u1622:	
  1044  01D8  07AE               	addwf	??_loop+2,f
  1045  01D9                     u1623:	
  1046  01D9  0827               	movf	loop@m+3,w
  1047  01DA  1803               	skipnc
  1048  01DB  0A27               	incf	loop@m+3,w
  1049  01DC  07AF               	addwf	??_loop+3,f
  1050  01DD  0877               	movf	?_millis+3,w
  1051  01DE  022F               	subwf	??_loop+3,w
  1052  01DF  1D03               	skipz
  1053  01E0  29EB               	goto	u1635
  1054  01E1  0876               	movf	?_millis+2,w
  1055  01E2  022E               	subwf	??_loop+2,w
  1056  01E3  1D03               	skipz
  1057  01E4  29EB               	goto	u1635
  1058  01E5  0875               	movf	?_millis+1,w
  1059  01E6  022D               	subwf	??_loop+1,w
  1060  01E7  1D03               	skipz
  1061  01E8  29EB               	goto	u1635
  1062  01E9  0874               	movf	?_millis,w
  1063  01EA  022C               	subwf	??_loop,w
  1064  01EB                     u1635:	
  1065  01EB  1803               	skipnc
  1066  01EC  29F2               	goto	l1693
  1067                           
  1068                           ;main.c: 111: estado = ANALISIS;
  1069  01ED  3002               	movlw	2
  1070  01EE  00A8               	movwf	loop@estado
  1071  01EF  3000               	movlw	0
  1072  01F0  00A9               	movwf	loop@estado+1
  1073                           
  1074                           ;main.c: 112: break;
  1075  01F1  0008               	return
  1076  01F2                     l1693:	
  1077                           
  1078                           ;main.c: 113: }
  1079                           ;main.c: 115: setMotores(-1, -1);
  1080  01F2  01F4               	clrf	setMotores@der
  1081  01F3  03F4               	decf	setMotores@der,f
  1082  01F4  30FF               	movlw	255
  1083  01F5  22C2               	fcall	_setMotores
  1084                           
  1085                           ;main.c: 116: break;
  1086  01F6  0008               	return
  1087  01F7                     l1695:	
  1088                           ;main.c: 118: case VUELTA:
  1089                           
  1090                           
  1091                           ;main.c: 119: setMotores(-(semidireccion == IZQ), -(semidireccion == DER));
  1092  01F7  3009               	movlw	9
  1093  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1094  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1095  01FA  0634               	xorwf	loop@semidireccion,w
  1096  01FB  0435               	iorwf	loop@semidireccion+1,w
  1097  01FC  1D03               	btfss	3,2
  1098  01FD  2A00               	goto	u1640
  1099  01FE  3001               	movlw	1
  1100  01FF  2A01               	goto	u1650
  1101  0200                     u1640:	
  1102  0200  3000               	movlw	0
  1103  0201                     u1650:	
  1104  0201  3AFF               	xorlw	255
  1105  0202  3E01               	addlw	1
  1106  0203  00AC               	movwf	??_loop
  1107  0204  082C               	movf	??_loop,w
  1108  0205  00F4               	movwf	setMotores@der
  1109  0206  3008               	movlw	8
  1110  0207  0634               	xorwf	loop@semidireccion,w
  1111  0208  0435               	iorwf	loop@semidireccion+1,w
  1112  0209  1D03               	btfss	3,2
  1113  020A  2A0D               	goto	u1660
  1114  020B  3001               	movlw	1
  1115  020C  2A0E               	goto	u1670
  1116  020D                     u1660:	
  1117  020D  3000               	movlw	0
  1118  020E                     u1670:	
  1119  020E  3AFF               	xorlw	255
  1120  020F  3E01               	addlw	1
  1121  0210  22C2               	fcall	_setMotores
  1122                           
  1123                           ;main.c: 120: break;
  1124  0211  0008               	return
  1125  0212                     l1697:	
  1126                           ;main.c: 122: case ATAQUE:
  1127                           
  1128                           
  1129                           ;main.c: 123: setMotores(1, 1);
  1130  0212  01F4               	clrf	setMotores@der
  1131  0213  0AF4               	incf	setMotores@der,f
  1132  0214  3001               	movlw	1
  1133  0215  22C2               	fcall	_setMotores
  1134                           
  1135                           ;main.c: 124: break;
  1136  0216  0008               	return
  1137  0217                     l1699:	
  1138                           ;main.c: 126: case IZQA:
  1139                           
  1140                           
  1141                           ;main.c: 127: setMotores(0, 1);
  1142  0217  01F4               	clrf	setMotores@der
  1143  0218  0AF4               	incf	setMotores@der,f
  1144  0219  3000               	movlw	0
  1145  021A  22C2               	fcall	_setMotores
  1146                           
  1147                           ;main.c: 128: direccion = IZQ;
  1148  021B  3008               	movlw	8
  1149  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1150  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1151  021E  00B6               	movwf	loop@direccion
  1152  021F  3000               	movlw	0
  1153  0220  00B7               	movwf	loop@direccion+1
  1154                           
  1155                           ;main.c: 129: break;
  1156  0221  0008               	return
  1157  0222                     l1703:	
  1158                           ;main.c: 131: case DERA:
  1159                           
  1160                           
  1161                           ;main.c: 132: setMotores(1, 0);
  1162  0222  01F4               	clrf	setMotores@der
  1163  0223  3001               	movlw	1
  1164  0224  22C2               	fcall	_setMotores
  1165                           
  1166                           ;main.c: 133: direccion = DER;
  1167  0225  3009               	movlw	9
  1168  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0228  00B6               	movwf	loop@direccion
  1171  0229  3000               	movlw	0
  1172  022A  00B7               	movwf	loop@direccion+1
  1173                           
  1174                           ;main.c: 134: break;
  1175  022B  0008               	return
  1176  022C                     l1707:	
  1177                           ;main.c: 136: case IZQ:
  1178                           
  1179                           
  1180                           ;main.c: 137: setMotores(-1, 1);
  1181  022C  01F4               	clrf	setMotores@der
  1182  022D  0AF4               	incf	setMotores@der,f
  1183  022E  30FF               	movlw	255
  1184  022F  22C2               	fcall	_setMotores
  1185                           
  1186                           ;main.c: 138: direccion = IZQ;
  1187  0230  3008               	movlw	8
  1188  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0233  00B6               	movwf	loop@direccion
  1191  0234  3000               	movlw	0
  1192  0235  00B7               	movwf	loop@direccion+1
  1193                           
  1194                           ;main.c: 139: break;
  1195  0236  0008               	return
  1196  0237                     l1711:	
  1197                           ;main.c: 141: case DER:
  1198                           
  1199                           
  1200                           ;main.c: 142: setMotores(1, -1);
  1201  0237  01F4               	clrf	setMotores@der
  1202  0238  03F4               	decf	setMotores@der,f
  1203  0239  3001               	movlw	1
  1204  023A  22C2               	fcall	_setMotores
  1205                           
  1206                           ;main.c: 143: direccion = DER;
  1207  023B  3009               	movlw	9
  1208  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1209  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1210  023E  00B6               	movwf	loop@direccion
  1211  023F  3000               	movlw	0
  1212  0240  00B7               	movwf	loop@direccion+1
  1213                           
  1214                           ;main.c: 145: }
  1215                           
  1216                           ;main.c: 144: break;
  1217  0241  0008               	return
  1218  0242                     l1717:	
  1219                           
  1220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1221                           ; Switch size 1, requested type "space"
  1222                           ; Number of cases is 1, Range of values is 0 to 0
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte            4     3 (average)
  1226                           ; direct_byte            7     6 (fixed)
  1227                           ; jumptable            260     6 (fixed)
  1228                           ;	Chosen strategy is simple_byte
  1229  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0244  0829               	movf	loop@estado+1,w
  1232  0245  3A00               	xorlw	0	; case 0
  1233  0246  1903               	skipnz
  1234  0247  2A49               	goto	l1775
  1235  0248  2A54               	goto	l65
  1236  0249                     l1775:	
  1237                           
  1238                           ; Switch size 1, requested type "space"
  1239                           ; Number of cases is 10, Range of values is 0 to 9
  1240                           ; switch strategies available:
  1241                           ; Name         Instructions Cycles
  1242                           ; direct_byte           16     6 (fixed)
  1243                           ; simple_byte           31    16 (average)
  1244                           ; jumptable            260     6 (fixed)
  1245                           ;	Chosen strategy is direct_byte
  1246  0249  0828               	movf	loop@estado,w
  1247  024A  0084               	movwf	4
  1248  024B  300A               	movlw	10
  1249  024C  0204               	subwf	4,w
  1250  024D  1803               	skipnc
  1251  024E  0008               	return
  1252  024F  3003               	movlw	high S1777
  1253  0250  008A               	movwf	10
  1254  0251  306E               	movlw	low S1777
  1255  0252  0704               	addwf	4,w
  1256  0253  0082               	movwf	2
  1257  0254                     l65:	
  1258  0254  0008               	return
  1259  0255                     __end_of_loop:	
  1260                           
  1261                           	psect	swtext1
  1262  036E                     __pswtext1:	
  1263  036E                     S1777:	
  1264  036E  2828               	ljmp	l1581
  1265  036F  28CC               	ljmp	l1635
  1266  0370  2951               	ljmp	l1653
  1267  0371  29C0               	ljmp	l1689
  1268  0372  29F7               	ljmp	l1695
  1269  0373  2A12               	ljmp	l1697
  1270  0374  2A17               	ljmp	l1699
  1271  0375  2A22               	ljmp	l1703
  1272  0376  2A2C               	ljmp	l1707
  1273  0377  2A37               	ljmp	l1711
  1274                           
  1275                           	psect	text2
  1276  02C2                     __ptext2:	
  1277 ;; *************** function _setMotores *****************
  1278 ;; Defined at:
  1279 ;;		line 63 in file "functions.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  izq             1    wreg     char 
  1282 ;;  der             1    4[COMMON] char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  izq             1    5[COMMON] char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1294 ;;      Params:         1       0       0       0
  1295 ;;      Locals:         1       0       0       0
  1296 ;;      Temps:          0       0       0       0
  1297 ;;      Totals:         2       0       0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_loop
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _setMotores
  1310  02C2                     _setMotores:	
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _setMotores: [wreg]
  1314                           ;setMotores@izq stored from wreg
  1315  02C2  00F5               	movwf	setMotores@izq
  1316                           
  1317                           ;functions.c: 64: PORTAbits.RA2 = (izq < 0);
  1318  02C3  1FF5               	btfss	setMotores@izq,7
  1319  02C4  2AC9               	goto	u780
  1320  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1321  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1322  02C7  1505               	bsf	5,2	;volatile
  1323  02C8  2ACC               	goto	l1297
  1324  02C9                     u780:	
  1325  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1326  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1327  02CB  1105               	bcf	5,2	;volatile
  1328  02CC                     l1297:	
  1329                           
  1330                           ;functions.c: 65: PORTAbits.RA3 = (izq > 0);
  1331  02CC  0875               	movf	setMotores@izq,w
  1332  02CD  3A80               	xorlw	128
  1333  02CE  3E7F               	addlw	-129
  1334  02CF  1C03               	btfss	3,0
  1335  02D0  2AD5               	goto	u800
  1336  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1337  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1338  02D3  1585               	bsf	5,3	;volatile
  1339  02D4  2AD8               	goto	l1299
  1340  02D5                     u800:	
  1341  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1342  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1343  02D7  1185               	bcf	5,3	;volatile
  1344  02D8                     l1299:	
  1345                           
  1346                           ;functions.c: 66: PORTBbits.RB0 = (der < 0);
  1347  02D8  1FF4               	btfss	setMotores@der,7
  1348  02D9  2ADE               	goto	u820
  1349  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1350  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1351  02DC  1406               	bsf	6,0	;volatile
  1352  02DD  2AE1               	goto	u834
  1353  02DE                     u820:	
  1354  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1355  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1356  02E0  1006               	bcf	6,0	;volatile
  1357  02E1                     u834:	
  1358                           
  1359                           ;functions.c: 67: PORTBbits.RB1 = (der > 0);
  1360  02E1  0874               	movf	setMotores@der,w
  1361  02E2  3A80               	xorlw	128
  1362  02E3  3E7F               	addlw	-129
  1363  02E4  1C03               	btfss	3,0
  1364  02E5  2AEA               	goto	u840
  1365  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1366  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1367  02E8  1486               	bsf	6,1	;volatile
  1368  02E9  0008               	return
  1369  02EA                     u840:	
  1370  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1371  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1372  02EC  1086               	bcf	6,1	;volatile
  1373  02ED  0008               	return
  1374  02EE                     __end_of_setMotores:	
  1375                           
  1376                           	psect	text3
  1377  0363                     __ptext3:	
  1378 ;; *************** function _millis *****************
  1379 ;; Defined at:
  1380 ;;		line 59 in file "functions.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  4    4[COMMON] unsigned long 
  1387 ;; Registers used:
  1388 ;;		wreg
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1394 ;;      Params:         4       0       0       0
  1395 ;;      Locals:         0       0       0       0
  1396 ;;      Temps:          0       0       0       0
  1397 ;;      Totals:         4       0       0       0
  1398 ;;Total ram usage:        4 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    1
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_loop
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _millis
  1410  0363                     _millis:	
  1411                           
  1412                           ;functions.c: 60: return millisCounter;
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in _millis: [wreg]
  1416  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0365  0823               	movf	_millisCounter+3,w
  1419  0366  00F7               	movwf	?_millis+3
  1420  0367  0822               	movf	_millisCounter+2,w
  1421  0368  00F6               	movwf	?_millis+2
  1422  0369  0821               	movf	_millisCounter+1,w
  1423  036A  00F5               	movwf	?_millis+1
  1424  036B  0820               	movf	_millisCounter,w
  1425  036C  00F4               	movwf	?_millis
  1426  036D  0008               	return
  1427  036E                     __end_of_millis:	
  1428                           
  1429                           	psect	text4
  1430  02EE                     __ptext4:	
  1431 ;; *************** function _led *****************
  1432 ;; Defined at:
  1433 ;;		line 105 in file "functions.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  n               1    wreg     unsigned char 
  1436 ;;  v               1    0[BANK0 ] unsigned char 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  n               1    1[BANK0 ] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1448 ;;      Params:         0       1       0       0
  1449 ;;      Locals:         0       1       0       0
  1450 ;;      Temps:          0       0       0       0
  1451 ;;      Totals:         0       2       0       0
  1452 ;;Total ram usage:        2 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_loop
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _led
  1464  02EE                     _led:	
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _led: [wreg+status,2+status,0]
  1468                           ;led@n stored from wreg
  1469  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1470  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1471  02F0  00AB               	movwf	led@n
  1472                           
  1473                           ;functions.c: 106: if(n == R) PORTBbits.RB6 = v != 0;
  1474  02F1  082B               	movf	led@n,w
  1475  02F2  1D03               	btfss	3,2
  1476  02F3  2AFE               	goto	l130
  1477  02F4  082A               	movf	led@v,w
  1478  02F5  1903               	btfsc	3,2
  1479  02F6  2AFB               	goto	u1300
  1480  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1481  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1482  02F9  1706               	bsf	6,6	;volatile
  1483  02FA  2AFE               	goto	l130
  1484  02FB                     u1300:	
  1485  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1486  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1487  02FD  1306               	bcf	6,6	;volatile
  1488  02FE                     l130:	
  1489                           
  1490                           ;functions.c: 107: if(n == A) PORTBbits.RB7 = v != 0;
  1491  02FE  032B               	decf	led@n,w
  1492  02FF  1D03               	btfss	3,2
  1493  0300  2B0B               	goto	l131
  1494  0301  082A               	movf	led@v,w
  1495  0302  1903               	btfsc	3,2
  1496  0303  2B08               	goto	u1330
  1497  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0306  1786               	bsf	6,7	;volatile
  1500  0307  2B0B               	goto	l131
  1501  0308                     u1330:	
  1502  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1503  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1504  030A  1386               	bcf	6,7	;volatile
  1505  030B                     l131:	
  1506                           
  1507                           ;functions.c: 108: if(n == V) PORTAbits.RA6 = v != 0;
  1508  030B  3002               	movlw	2
  1509  030C  062B               	xorwf	led@n,w
  1510  030D  1D03               	btfss	3,2
  1511  030E  0008               	return
  1512  030F  082A               	movf	led@v,w
  1513  0310  1903               	btfsc	3,2
  1514  0311  2B16               	goto	u1360
  1515  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0314  1705               	bsf	5,6	;volatile
  1518  0315  0008               	return
  1519  0316                     u1360:	
  1520  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0318  1305               	bcf	5,6	;volatile
  1523  0319  0008               	return
  1524  031A                     __end_of_led:	
  1525                           
  1526                           	psect	text5
  1527  0255                     __ptext5:	
  1528 ;; *************** function _ir *****************
  1529 ;; Defined at:
  1530 ;;		line 117 in file "functions.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  n               1    wreg     unsigned char 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  n               1    4[COMMON] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;		None               void
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1544 ;;      Params:         0       0       0       0
  1545 ;;      Locals:         1       0       0       0
  1546 ;;      Temps:          0       0       0       0
  1547 ;;      Totals:         1       0       0       0
  1548 ;;Total ram usage:        1 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_loop
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _ir
  1560  0255                     _ir:	
  1561                           
  1562                           ;incstack = 0
  1563                           ; Regs used in _ir: [wreg+status,2+status,0]
  1564                           ;ir@n stored from wreg
  1565  0255  00F4               	movwf	ir@n
  1566                           
  1567                           ;functions.c: 118: if(n == 1) return !PORTAbits.RA1;
  1568  0256  0374               	decf	ir@n,w
  1569  0257  1D03               	btfss	3,2
  1570  0258  2A61               	goto	l1311
  1571  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1572  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1573  025B  1C85               	btfss	5,1	;volatile
  1574  025C  2A5F               	goto	l1307
  1575  025D  1003               	clrc
  1576  025E  0008               	return
  1577  025F                     l1307:	
  1578  025F  1403               	setc
  1579  0260  0008               	return
  1580  0261                     l1311:	
  1581                           
  1582                           ;functions.c: 119: if(n == 2) return !PORTAbits.RA0;
  1583  0261  3002               	movlw	2
  1584  0262  0674               	xorwf	ir@n,w
  1585  0263  1D03               	btfss	3,2
  1586  0264  2A6D               	goto	l1321
  1587  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0267  1C05               	btfss	5,0	;volatile
  1590  0268  2A6B               	goto	l1317
  1591  0269  1003               	clrc
  1592  026A  0008               	return
  1593  026B                     l1317:	
  1594  026B  1403               	setc
  1595  026C  0008               	return
  1596  026D                     l1321:	
  1597                           
  1598                           ;functions.c: 120: if(n == 3) return !PORTAbits.RA4;
  1599  026D  3003               	movlw	3
  1600  026E  0674               	xorwf	ir@n,w
  1601  026F  1D03               	btfss	3,2
  1602  0270  2A79               	goto	l1331
  1603  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0273  1E05               	btfss	5,4	;volatile
  1606  0274  2A77               	goto	l1327
  1607  0275  1003               	clrc
  1608  0276  0008               	return
  1609  0277                     l1327:	
  1610  0277  1403               	setc
  1611  0278  0008               	return
  1612  0279                     l1331:	
  1613                           
  1614                           ;functions.c: 121: if(n == 4) return !PORTAbits.RA5;
  1615  0279  3004               	movlw	4
  1616  027A  0674               	xorwf	ir@n,w
  1617  027B  1D03               	btfss	3,2
  1618  027C  2A85               	goto	l1341
  1619  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1620  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1621  027F  1E85               	btfss	5,5	;volatile
  1622  0280  2A83               	goto	l1337
  1623  0281  1003               	clrc
  1624  0282  0008               	return
  1625  0283                     l1337:	
  1626  0283  1403               	setc
  1627  0284  0008               	return
  1628  0285                     l1341:	
  1629                           
  1630                           ;functions.c: 122: if(n == 5) return !PORTBbits.RB2;
  1631  0285  3005               	movlw	5
  1632  0286  0674               	xorwf	ir@n,w
  1633  0287  1D03               	btfss	3,2
  1634  0288  2A91               	goto	l1351
  1635  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1636  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1637  028B  1D06               	btfss	6,2	;volatile
  1638  028C  2A8F               	goto	l1347
  1639  028D  1003               	clrc
  1640  028E  0008               	return
  1641  028F                     l1347:	
  1642  028F  1403               	setc
  1643  0290  0008               	return
  1644  0291                     l1351:	
  1645                           
  1646                           ;functions.c: 123: return 0;
  1647  0291  1003               	clrc
  1648  0292  0008               	return
  1649  0293                     __end_of_ir:	
  1650                           
  1651                           	psect	text6
  1652  0378                     __ptext6:	
  1653 ;; *************** function _cny *****************
  1654 ;; Defined at:
  1655 ;;		line 126 in file "functions.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;		None               void
  1662 ;; Registers used:
  1663 ;;		status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1669 ;;      Params:         0       0       0       0
  1670 ;;      Locals:         0       0       0       0
  1671 ;;      Temps:          0       0       0       0
  1672 ;;      Totals:         0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_loop
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _cny
  1685  0378                     _cny:	
  1686                           
  1687                           ;functions.c: 127: return !PORTAbits.RA7;
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _cny: [status]
  1691  0378  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0379  1303               	bcf	3,6	;RP1=0, select bank0
  1693  037A  1F85               	btfss	5,7	;volatile
  1694  037B  2B7E               	goto	l1359
  1695  037C  1003               	clrc
  1696  037D  0008               	return
  1697  037E                     l1359:	
  1698  037E  1403               	setc
  1699  037F  0008               	return
  1700  0380                     __end_of_cny:	
  1701                           
  1702                           	psect	text7
  1703  031A                     __ptext7:	
  1704 ;; *************** function _btn *****************
  1705 ;; Defined at:
  1706 ;;		line 111 in file "functions.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  n               1    wreg     unsigned char 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  n               1    4[COMMON] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;		None               void
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1720 ;;      Params:         0       0       0       0
  1721 ;;      Locals:         1       0       0       0
  1722 ;;      Temps:          0       0       0       0
  1723 ;;      Totals:         1       0       0       0
  1724 ;;Total ram usage:        1 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    1
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_loop
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _btn
  1736  031A                     _btn:	
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _btn: [wreg+status,2+status,0]
  1740                           ;btn@n stored from wreg
  1741  031A  00F4               	movwf	btn@n
  1742                           
  1743                           ;functions.c: 112: if(n == I) return !PORTBbits.RB4;
  1744  031B  3004               	movlw	4
  1745  031C  0674               	xorwf	btn@n,w
  1746  031D  1D03               	btfss	3,2
  1747  031E  2B27               	goto	l1269
  1748  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0321  1E06               	btfss	6,4	;volatile
  1751  0322  2B25               	goto	l1265
  1752  0323  1003               	clrc
  1753  0324  0008               	return
  1754  0325                     l1265:	
  1755  0325  1403               	setc
  1756  0326  0008               	return
  1757  0327                     l1269:	
  1758                           
  1759                           ;functions.c: 113: if(n == D) return !PORTBbits.RB5;
  1760  0327  3003               	movlw	3
  1761  0328  0674               	xorwf	btn@n,w
  1762  0329  1D03               	btfss	3,2
  1763  032A  2B33               	goto	l1279
  1764  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1765  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1766  032D  1E86               	btfss	6,5	;volatile
  1767  032E  2B31               	goto	l1275
  1768  032F  1003               	clrc
  1769  0330  0008               	return
  1770  0331                     l1275:	
  1771  0331  1403               	setc
  1772  0332  0008               	return
  1773  0333                     l1279:	
  1774                           
  1775                           ;functions.c: 114: return 0;
  1776  0333  1003               	clrc
  1777  0334  0008               	return
  1778  0335                     __end_of_btn:	
  1779                           
  1780                           	psect	text8
  1781  0348                     __ptext8:	
  1782 ;; *************** function _initRest *****************
  1783 ;; Defined at:
  1784 ;;		line 97 in file "functions.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1798 ;;      Params:         0       0       0       0
  1799 ;;      Locals:         0       0       0       0
  1800 ;;      Temps:          0       0       0       0
  1801 ;;      Totals:         0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _initRest
  1814  0348                     _initRest:	
  1815                           
  1816                           ;functions.c: 98: CMCON = 0x07;
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _initRest: [wreg+status,2]
  1820  0348  3007               	movlw	7
  1821  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1822  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1823  034B  009F               	movwf	31	;volatile
  1824                           
  1825                           ;functions.c: 99: VRCON = 0x00;
  1826  034C  1683               	bsf	3,5	;RP0=1, select bank1
  1827  034D  1303               	bcf	3,6	;RP1=0, select bank1
  1828  034E  019F               	clrf	31	;volatile
  1829                           
  1830                           ;functions.c: 100: INTCON = 0xE0;
  1831  034F  30E0               	movlw	224
  1832  0350  008B               	movwf	11	;volatile
  1833                           
  1834                           ;functions.c: 101: PCON = 0x0B;
  1835  0351  300B               	movlw	11
  1836  0352  008E               	movwf	14	;volatile
  1837                           
  1838                           ;functions.c: 102: OPTION_REG = 0x87;
  1839  0353  3087               	movlw	135
  1840  0354  0081               	movwf	1	;volatile
  1841  0355  0008               	return
  1842  0356                     __end_of_initRest:	
  1843                           
  1844                           	psect	text9
  1845  0356                     __ptext9:	
  1846 ;; *************** function _initPWM *****************
  1847 ;; Defined at:
  1848 ;;		line 90 in file "functions.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1862 ;;      Params:         0       0       0       0
  1863 ;;      Locals:         0       0       0       0
  1864 ;;      Temps:          0       0       0       0
  1865 ;;      Totals:         0       0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _initPWM
  1878  0356                     _initPWM:	
  1879                           
  1880                           ;functions.c: 91: PR2 = 104;
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _initPWM: [wreg]
  1884  0356  3068               	movlw	104
  1885  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1887  0359  0092               	movwf	18	;volatile
  1888                           
  1889                           ;functions.c: 92: CCPR1L = 0x3F;
  1890  035A  303F               	movlw	63
  1891  035B  1283               	bcf	3,5	;RP0=0, select bank0
  1892  035C  1303               	bcf	3,6	;RP1=0, select bank0
  1893  035D  0095               	movwf	21	;volatile
  1894                           
  1895                           ;functions.c: 93: CCP1CON = 0x0F;
  1896  035E  300F               	movlw	15
  1897  035F  0097               	movwf	23	;volatile
  1898                           
  1899                           ;functions.c: 94: T2CON = 0x05;
  1900  0360  3005               	movlw	5
  1901  0361  0092               	movwf	18	;volatile
  1902  0362  0008               	return
  1903  0363                     __end_of_initPWM:	
  1904                           
  1905                           	psect	text10
  1906  0335                     __ptext10:	
  1907 ;; *************** function _initIO *****************
  1908 ;; Defined at:
  1909 ;;		line 70 in file "functions.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		None
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1923 ;;      Params:         0       0       0       0
  1924 ;;      Locals:         0       0       0       0
  1925 ;;      Temps:          0       0       0       0
  1926 ;;      Totals:         0       0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    1
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _initIO
  1939  0335                     _initIO:	
  1940                           
  1941                           ;functions.c: 71: TRISAbits.TRISA1 = 1;
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _initIO: []
  1945  0335  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0336  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0337  1485               	bsf	5,1	;volatile
  1948                           
  1949                           ;functions.c: 72: TRISAbits.TRISA0 = 1;
  1950  0338  1405               	bsf	5,0	;volatile
  1951                           
  1952                           ;functions.c: 73: TRISAbits.TRISA4 = 1;
  1953  0339  1605               	bsf	5,4	;volatile
  1954                           
  1955                           ;functions.c: 74: TRISAbits.TRISA5 = 1;
  1956  033A  1685               	bsf	5,5	;volatile
  1957                           
  1958                           ;functions.c: 75: TRISBbits.TRISB2 = 1;
  1959  033B  1506               	bsf	6,2	;volatile
  1960                           
  1961                           ;functions.c: 76: TRISAbits.TRISA7 = 1;
  1962  033C  1785               	bsf	5,7	;volatile
  1963                           
  1964                           ;functions.c: 77: TRISBbits.TRISB4 = 1;
  1965  033D  1606               	bsf	6,4	;volatile
  1966                           
  1967                           ;functions.c: 78: TRISBbits.TRISB5 = 1;
  1968  033E  1686               	bsf	6,5	;volatile
  1969                           
  1970                           ;functions.c: 80: TRISBbits.TRISB3 = 0;
  1971  033F  1186               	bcf	6,3	;volatile
  1972                           
  1973                           ;functions.c: 81: TRISBbits.TRISB6 = 0;
  1974  0340  1306               	bcf	6,6	;volatile
  1975                           
  1976                           ;functions.c: 82: TRISBbits.TRISB7 = 0;
  1977  0341  1386               	bcf	6,7	;volatile
  1978                           
  1979                           ;functions.c: 83: TRISAbits.TRISA6 = 0;
  1980  0342  1305               	bcf	5,6	;volatile
  1981                           
  1982                           ;functions.c: 84: TRISBbits.TRISB0 = 0;
  1983  0343  1006               	bcf	6,0	;volatile
  1984                           
  1985                           ;functions.c: 85: TRISBbits.TRISB1 = 0;
  1986  0344  1086               	bcf	6,1	;volatile
  1987                           
  1988                           ;functions.c: 86: TRISAbits.TRISA2 = 0;
  1989  0345  1105               	bcf	5,2	;volatile
  1990                           
  1991                           ;functions.c: 87: TRISAbits.TRISA3 = 0;
  1992  0346  1185               	bcf	5,3	;volatile
  1993  0347  0008               	return
  1994  0348                     __end_of_initIO:	
  1995                           
  1996                           	psect	text11
  1997  0293                     __ptext11:	
  1998 ;; *************** function _ISR *****************
  1999 ;; Defined at:
  2000 ;;		line 49 in file "functions.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2014 ;;      Params:         0       0       0       0
  2015 ;;      Locals:         0       0       0       0
  2016 ;;      Temps:          4       0       0       0
  2017 ;;      Totals:         4       0       0       0
  2018 ;;Total ram usage:        4 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		Interrupt level 1
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _ISR
  2029  0293                     _ISR:	
  2030                           
  2031                           ;functions.c: 50: static unsigned int decimicrosCounter = 0;
  2032                           ;functions.c: 51: if(!INTCONbits.T0IF) return;
  2033  0293  1D0B               	btfss	11,2	;volatile
  2034  0294  2AB7               	goto	i1l111
  2035                           
  2036                           ;functions.c: 52: decimicrosCounter += 256;
  2037  0295  3000               	movlw	0
  2038  0296  07F8               	addwf	ISR@decimicrosCounter,f
  2039  0297  1803               	skipnc
  2040  0298  0AF9               	incf	ISR@decimicrosCounter+1,f
  2041  0299  3001               	movlw	1
  2042  029A  07F9               	addwf	ISR@decimicrosCounter+1,f
  2043                           
  2044                           ;functions.c: 53: if(decimicrosCounter < 10000) return;
  2045  029B  3027               	movlw	39
  2046  029C  0279               	subwf	ISR@decimicrosCounter+1,w
  2047  029D  3010               	movlw	16
  2048  029E  1903               	skipnz
  2049  029F  0278               	subwf	ISR@decimicrosCounter,w
  2050  02A0  1C03               	btfss	3,0
  2051  02A1  2AB7               	goto	i1l111
  2052                           
  2053                           ;functions.c: 54: millisCounter++;
  2054  02A2  3001               	movlw	1
  2055  02A3  07A0               	addwf	_millisCounter,f
  2056  02A4  3000               	movlw	0
  2057  02A5  1803               	skipnc
  2058  02A6  3001               	movlw	1
  2059  02A7  07A1               	addwf	_millisCounter+1,f
  2060  02A8  3000               	movlw	0
  2061  02A9  1803               	skipnc
  2062  02AA  3001               	movlw	1
  2063  02AB  07A2               	addwf	_millisCounter+2,f
  2064  02AC  3000               	movlw	0
  2065  02AD  1803               	skipnc
  2066  02AE  3001               	movlw	1
  2067  02AF  07A3               	addwf	_millisCounter+3,f
  2068                           
  2069                           ;functions.c: 55: decimicrosCounter -= 10000;
  2070  02B0  3010               	movlw	16
  2071  02B1  02F8               	subwf	ISR@decimicrosCounter,f
  2072  02B2  3027               	movlw	39
  2073  02B3  1C03               	skipc
  2074  02B4  03F9               	decf	ISR@decimicrosCounter+1,f
  2075  02B5  02F9               	subwf	ISR@decimicrosCounter+1,f
  2076                           
  2077                           ;functions.c: 56: INTCONbits.T0IF = 0;
  2078  02B6  110B               	bcf	11,2	;volatile
  2079  02B7                     i1l111:	
  2080  02B7  0873               	movf	??_ISR+3,w
  2081  02B8  00FF               	movwf	127
  2082  02B9  0872               	movf	??_ISR+2,w
  2083  02BA  008A               	movwf	10
  2084  02BB  0871               	movf	??_ISR+1,w
  2085  02BC  0084               	movwf	4
  2086  02BD  0E70               	swapf	??_ISR^(0+-128),w
  2087  02BE  0083               	movwf	3
  2088  02BF  0EFE               	swapf	126,f
  2089  02C0  0E7E               	swapf	126,w
  2090  02C1  0009               	retfie
  2091  02C2                     __end_of_ISR:	
  2092  007E                     btemp	set	126	;btemp
  2093  007E                     wtemp0	set	126
  2094                           
  2095                           	psect	intentry
  2096  0004                     __pintentry:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _ISR: [wreg]
  2099                           
  2100  0004                     interrupt_function:	
  2101  007E                     saved_w	set	btemp
  2102  0004  00FE               	movwf	btemp
  2103  0005  0E03               	swapf	3,w
  2104  0006  00F0               	movwf	??_ISR
  2105  0007  0804               	movf	4,w
  2106  0008  00F1               	movwf	??_ISR+1
  2107  0009  080A               	movf	10,w
  2108  000A  00F2               	movwf	??_ISR+2
  2109  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2110  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2111  000D  087F               	movf	btemp+1,w
  2112  000E  00F3               	movwf	??_ISR+3
  2113  000F  2A93               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     10      24
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _loop->_millis
    _led->_millis

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_led

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2270
                             _initIO
                            _initPWM
                           _initRest
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0    2270
                                              2 BANK0      8     8      0
                                _btn
                                _cny
                                 _ir
                                _led
                             _millis
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _setMotores                                           2     1      1     664
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                              4 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _led                                                  2     1      1    1341
                                              0 BANK0      2     1      1
                             _millis (ARG)
 ---------------------------------------------------------------------------------
 (2) _ir                                                   1     1      0     110
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _cny                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _btn                                                  1     1      0      44
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initRest                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initIO
   _initPWM
   _initRest
   _loop
     _btn
     _cny
     _ir
     _led
       _millis (ARG)
     _millis
     _setMotores

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      18       3       30.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      10        0.0%
ABS                  0      0      22       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 08 00:00:20 2018

                      pc 0002              __CFG_CP$OFF 0000                       l51 0175  
                     l65 0254                       _ir 0255                       fsr 0004  
                    ?_ir 0070                      l130 02FE                      l131 030B  
                    _PR2 0092             __CFG_CPD$OFF 0000                      _ISR 0293  
                    u800 02D5                      u820 02DE                      u840 02EA  
                    u834 02E1                      u780 02C9                      _led 02EE  
                    _btn 031A                      _cny 0378                      ir@n 0074  
                    fsr0 0004                     S1777 036E                     ??_ir 0074  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     l1311 0261  
                   l1321 026D                     l1331 0279                     l1307 025F  
                   l1341 0285                     l1317 026B                     l1351 0291  
                   l1327 0277                     l1265 0325                     l1337 0283  
                   l1275 0331                     l1347 028F                     l1603 0074  
                   l1269 0327                     l1613 0096                     l1605 0084  
                   l1279 0333                     l1359 037E                     l1711 0237  
                   l1703 0222                     l1623 00AC                     l1297 02CC  
                   l1633 00C3                     l1299 02D8                     l1707 022C  
                   l1635 00CC                     l1653 0151                     l1645 010D  
                   l1581 0028                     l1717 0242                     l1733 0383  
                   l1671 018D                     l1591 0046                     l1665 017E  
                   l1593 0056                     l1683 01AE                     l1675 0198  
                   l1659 0166                     l1693 01F2                     ?_led 002A  
                   ?_btn 0070                     l1775 0249                     l1695 01F7  
                   l1687 01B9                     l1679 01A3                     l1697 0212  
                   l1689 01C0                     ?_cny 0070                     l1699 0217  
                   u1300 02FB                     u1330 0308                     u1500 0128  
                   u1501 0129                     u1510 0145                     u1502 012E  
                   u1503 012F                     u1360 0316                     u1520 0146  
                   u1515 0141                     u1620 01D2                     u1621 01D3  
                   u1622 01D8                     u1623 01D9                     u1640 0200  
                   u1480 00DD                     u1481 00DE                     u1650 0201  
                   u1482 00E3                     u1635 01EB                     u1483 00E4  
                   u1660 020D                     u1670 020E                     u1495 00F9  
                   _PCON 008E                     _main 0380                     _loop 0027  
                   led@n 002B                     btn@n 0074                     led@v 002A  
                   btemp 007E                     start 0010                    ??_ISR 0070  
                  ??_led 0078                    ??_btn 0074                    ??_cny 0074  
                  ?_main 0070                    ?_loop 0070            __CFG_WDTE$OFF 0000  
                  _CMCON 001F                    _T2CON 0012                    i1l111 02B7  
                  _VRCON 009F            __CFG_PWRTE$ON 0000          __end_of_initPWM 0363  
         __CFG_BOREN$OFF 0000                    pclath 000A                    loop@m 0024  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 0011             __end_of_main 0385             __end_of_loop 0255  
                 ??_main 0078                   ??_loop 002C                   _CCPR1L 0015  
                 _INTCON 000B        loop@semidireccion 0034            loop@direccion 0036  
       __end_of_initRest 0356                   _initIO 0335                   _millis 0363  
              ??_initPWM 0074                   saved_w 007E  __end_of__initialization 0025  
         __pcstackCOMMON 0070             __pidataBANK0 0385               __end_of_ir 0293  
   ISR@decimicrosCounter 0078               __pbssBANK0 0020               __pmaintext 0380  
             __pintentry 0004                  _CCP1CON 0017                  ?_initIO 0070  
                ?_millis 0074                ?_initRest 0070          __size_of_initIO 0013  
        __size_of_millis 000B                  __ptext1 0027                  __ptext2 02C2  
                __ptext3 0363                  __ptext4 02EE                  __ptext5 0255  
                __ptext6 0378                  __ptext7 031A                  __ptext8 0348  
                __ptext9 0356            _millisCounter 0020             __size_of_ISR 002F  
                _initPWM 0356                  _loop$83 0031                  _loop$84 0032  
                _loop$85 0033             __size_of_btn 001B             __size_of_led 002C  
           __size_of_cny 0008     end_of_initialization 0025               ??_initRest 0074  
             _setMotores 02C2                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086            setMotores@der 0074  
          setMotores@izq 0075           __end_of_initIO 0348           __end_of_millis 036E  
    start_initialization 0011              __end_of_ISR 02C2              __end_of_btn 0335  
            __end_of_led 031A              __end_of_cny 0380              ?_setMotores 0074  
            __pdataBANK0 0034                 ??_initIO 0074                 ??_millis 0078  
            __pbssCOMMON 0078                ___latbits 0000            __pcstackBANK0 002A  
             loop@estado 0028        __size_of_initRest 000E                __pswtext1 036E  
               ?_initPWM 0070      __size_of_setMotores 002C              __size_of_ir 003E  
      interrupt_function 0004         __size_of_initPWM 000D                 __ptext10 0335  
               __ptext11 0293                 _initRest 0348             ??_setMotores 0075  
          __size_of_main 0005            __size_of_loop 022E               _INTCONbits 000B  
     __end_of_setMotores 02EE                 intlevel1 0000               _OPTION_REG 0081  
     __CFG_FOSC$INTOSCIO 0000  
